// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: upload.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ReqUploadEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqUploadEntry) Reset() {
	*x = ReqUploadEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUploadEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUploadEntry) ProtoMessage() {}

func (x *ReqUploadEntry) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUploadEntry.ProtoReflect.Descriptor instead.
func (*ReqUploadEntry) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{0}
}

type RespUploadEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Entry   string `protobuf:"bytes,3,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *RespUploadEntry) Reset() {
	*x = RespUploadEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespUploadEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespUploadEntry) ProtoMessage() {}

func (x *RespUploadEntry) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespUploadEntry.ProtoReflect.Descriptor instead.
func (*RespUploadEntry) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{1}
}

func (x *RespUploadEntry) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RespUploadEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RespUploadEntry) GetEntry() string {
	if x != nil {
		return x.Entry
	}
	return ""
}

type ReqUpdateFileMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Filehash    string `protobuf:"bytes,2,opt,name=filehash,proto3" json:"filehash,omitempty"`
	Newfilename string `protobuf:"bytes,3,opt,name=newfilename,proto3" json:"newfilename,omitempty"`
}

func (x *ReqUpdateFileMeta) Reset() {
	*x = ReqUpdateFileMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateFileMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateFileMeta) ProtoMessage() {}

func (x *ReqUpdateFileMeta) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateFileMeta.ProtoReflect.Descriptor instead.
func (*ReqUpdateFileMeta) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{2}
}

func (x *ReqUpdateFileMeta) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ReqUpdateFileMeta) GetFilehash() string {
	if x != nil {
		return x.Filehash
	}
	return ""
}

func (x *ReqUpdateFileMeta) GetNewfilename() string {
	if x != nil {
		return x.Newfilename
	}
	return ""
}

type RespUpdateFileMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespUpdateFileMeta) Reset() {
	*x = RespUpdateFileMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespUpdateFileMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespUpdateFileMeta) ProtoMessage() {}

func (x *RespUpdateFileMeta) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespUpdateFileMeta.ProtoReflect.Descriptor instead.
func (*RespUpdateFileMeta) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{3}
}

func (x *RespUpdateFileMeta) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RespUpdateFileMeta) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqUploadFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Filename    string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Filecontent []byte `protobuf:"bytes,3,opt,name=filecontent,proto3" json:"filecontent,omitempty"`
}

func (x *ReqUploadFile) Reset() {
	*x = ReqUploadFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUploadFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUploadFile) ProtoMessage() {}

func (x *ReqUploadFile) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUploadFile.ProtoReflect.Descriptor instead.
func (*ReqUploadFile) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{4}
}

func (x *ReqUploadFile) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ReqUploadFile) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ReqUploadFile) GetFilecontent() []byte {
	if x != nil {
		return x.Filecontent
	}
	return nil
}

type RespUploadFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RespUploadFile) Reset() {
	*x = RespUploadFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespUploadFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespUploadFile) ProtoMessage() {}

func (x *RespUploadFile) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespUploadFile.ProtoReflect.Descriptor instead.
func (*RespUploadFile) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{5}
}

func (x *RespUploadFile) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RespUploadFile) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReqInitialMultipartUpload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Filehash string `protobuf:"bytes,2,opt,name=filehash,proto3" json:"filehash,omitempty"`
	Filesize int64  `protobuf:"varint,3,opt,name=filesize,proto3" json:"filesize,omitempty"`
}

func (x *ReqInitialMultipartUpload) Reset() {
	*x = ReqInitialMultipartUpload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqInitialMultipartUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqInitialMultipartUpload) ProtoMessage() {}

func (x *ReqInitialMultipartUpload) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqInitialMultipartUpload.ProtoReflect.Descriptor instead.
func (*ReqInitialMultipartUpload) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{6}
}

func (x *ReqInitialMultipartUpload) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ReqInitialMultipartUpload) GetFilehash() string {
	if x != nil {
		return x.Filehash
	}
	return ""
}

func (x *ReqInitialMultipartUpload) GetFilesize() int64 {
	if x != nil {
		return x.Filesize
	}
	return 0
}

type RespInitialMultipartUpload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Initialresult []byte `protobuf:"bytes,3,opt,name=initialresult,proto3" json:"initialresult,omitempty"`
}

func (x *RespInitialMultipartUpload) Reset() {
	*x = RespInitialMultipartUpload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespInitialMultipartUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespInitialMultipartUpload) ProtoMessage() {}

func (x *RespInitialMultipartUpload) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespInitialMultipartUpload.ProtoReflect.Descriptor instead.
func (*RespInitialMultipartUpload) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{7}
}

func (x *RespInitialMultipartUpload) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RespInitialMultipartUpload) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespInitialMultipartUpload) GetInitialresult() []byte {
	if x != nil {
		return x.Initialresult
	}
	return nil
}

type ReqUploadChunkFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uploadid   string `protobuf:"bytes,1,opt,name=uploadid,proto3" json:"uploadid,omitempty"`
	Chkidx     int32  `protobuf:"varint,2,opt,name=chkidx,proto3" json:"chkidx,omitempty"`
	Chkcontent []byte `protobuf:"bytes,3,opt,name=chkcontent,proto3" json:"chkcontent,omitempty"`
}

func (x *ReqUploadChunkFile) Reset() {
	*x = ReqUploadChunkFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUploadChunkFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUploadChunkFile) ProtoMessage() {}

func (x *ReqUploadChunkFile) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUploadChunkFile.ProtoReflect.Descriptor instead.
func (*ReqUploadChunkFile) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{8}
}

func (x *ReqUploadChunkFile) GetUploadid() string {
	if x != nil {
		return x.Uploadid
	}
	return ""
}

func (x *ReqUploadChunkFile) GetChkidx() int32 {
	if x != nil {
		return x.Chkidx
	}
	return 0
}

func (x *ReqUploadChunkFile) GetChkcontent() []byte {
	if x != nil {
		return x.Chkcontent
	}
	return nil
}

type RespUploadChunkFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespUploadChunkFile) Reset() {
	*x = RespUploadChunkFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespUploadChunkFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespUploadChunkFile) ProtoMessage() {}

func (x *RespUploadChunkFile) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespUploadChunkFile.ProtoReflect.Descriptor instead.
func (*RespUploadChunkFile) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{9}
}

func (x *RespUploadChunkFile) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RespUploadChunkFile) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqCompleteMultipartUpload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Uploadid string `protobuf:"bytes,2,opt,name=uploadid,proto3" json:"uploadid,omitempty"`
	Filehash string `protobuf:"bytes,3,opt,name=filehash,proto3" json:"filehash,omitempty"`
	Filesize int64  `protobuf:"varint,4,opt,name=filesize,proto3" json:"filesize,omitempty"`
	Filename string `protobuf:"bytes,5,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *ReqCompleteMultipartUpload) Reset() {
	*x = ReqCompleteMultipartUpload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCompleteMultipartUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCompleteMultipartUpload) ProtoMessage() {}

func (x *ReqCompleteMultipartUpload) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCompleteMultipartUpload.ProtoReflect.Descriptor instead.
func (*ReqCompleteMultipartUpload) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{10}
}

func (x *ReqCompleteMultipartUpload) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ReqCompleteMultipartUpload) GetUploadid() string {
	if x != nil {
		return x.Uploadid
	}
	return ""
}

func (x *ReqCompleteMultipartUpload) GetFilehash() string {
	if x != nil {
		return x.Filehash
	}
	return ""
}

func (x *ReqCompleteMultipartUpload) GetFilesize() int64 {
	if x != nil {
		return x.Filesize
	}
	return 0
}

func (x *ReqCompleteMultipartUpload) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type RespCompleteMultipartUpload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespCompleteMultipartUpload) Reset() {
	*x = RespCompleteMultipartUpload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCompleteMultipartUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCompleteMultipartUpload) ProtoMessage() {}

func (x *RespCompleteMultipartUpload) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCompleteMultipartUpload.ProtoReflect.Descriptor instead.
func (*RespCompleteMultipartUpload) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{11}
}

func (x *RespCompleteMultipartUpload) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RespCompleteMultipartUpload) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqCancelUpload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filehash string `protobuf:"bytes,1,opt,name=filehash,proto3" json:"filehash,omitempty"`
}

func (x *ReqCancelUpload) Reset() {
	*x = ReqCancelUpload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCancelUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCancelUpload) ProtoMessage() {}

func (x *ReqCancelUpload) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCancelUpload.ProtoReflect.Descriptor instead.
func (*ReqCancelUpload) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{12}
}

func (x *ReqCancelUpload) GetFilehash() string {
	if x != nil {
		return x.Filehash
	}
	return ""
}

type RespCancelUpload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespCancelUpload) Reset() {
	*x = RespCancelUpload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCancelUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCancelUpload) ProtoMessage() {}

func (x *RespCancelUpload) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCancelUpload.ProtoReflect.Descriptor instead.
func (*RespCancelUpload) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{13}
}

func (x *RespCancelUpload) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RespCancelUpload) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqFastUpload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Filehash string `protobuf:"bytes,2,opt,name=filehash,proto3" json:"filehash,omitempty"`
	Filename string `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	Filesize int64  `protobuf:"varint,4,opt,name=filesize,proto3" json:"filesize,omitempty"`
}

func (x *ReqFastUpload) Reset() {
	*x = ReqFastUpload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFastUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFastUpload) ProtoMessage() {}

func (x *ReqFastUpload) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFastUpload.ProtoReflect.Descriptor instead.
func (*ReqFastUpload) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{14}
}

func (x *ReqFastUpload) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ReqFastUpload) GetFilehash() string {
	if x != nil {
		return x.Filehash
	}
	return ""
}

func (x *ReqFastUpload) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ReqFastUpload) GetFilesize() int64 {
	if x != nil {
		return x.Filesize
	}
	return 0
}

type RespFastUpload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespFastUpload) Reset() {
	*x = RespFastUpload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespFastUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespFastUpload) ProtoMessage() {}

func (x *RespFastUpload) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespFastUpload.ProtoReflect.Descriptor instead.
func (*RespFastUpload) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{15}
}

func (x *RespFastUpload) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RespFastUpload) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_upload_proto protoreflect.FileDescriptor

var file_upload_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x10,
	0x0a, 0x0e, 0x72, 0x65, 0x71, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x22, 0x55, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x6d, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x70, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x69, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66,
	0x69, 0x6c, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3e, 0x0a,
	0x0e, 0x72, 0x65, 0x73, 0x70, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6f, 0x0a,
	0x19, 0x72, 0x65, 0x71, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x68, 0x61,
	0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x68,
	0x0a, 0x1a, 0x72, 0x65, 0x73, 0x70, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x68, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68,
	0x6b, 0x69, 0x64, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x6b, 0x69,
	0x64, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x6b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x68, 0x6b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x70, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0xa8, 0x01, 0x0a, 0x1a, 0x72, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x68, 0x61,
	0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x1b, 0x72, 0x65,
	0x73, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x2d, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x68, 0x61, 0x73, 0x68, 0x22, 0x38,
	0x0a, 0x10, 0x72, 0x65, 0x73, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x7f, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x46,
	0x61, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x68, 0x61, 0x73,
	0x68, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x36, 0x0a, 0x0e, 0x72, 0x65, 0x73,
	0x70, 0x46, 0x61, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x32, 0x86, 0x04, 0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x0f, 0x2e, 0x72, 0x65, 0x71, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x1a, 0x10, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x2e, 0x72, 0x65, 0x71, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x1a, 0x13, 0x2e,
	0x72, 0x65, 0x73, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x0e, 0x2e, 0x72, 0x65, 0x71, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x1a, 0x0f, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x16, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x1a, 0x2e, 0x72, 0x65, 0x71, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x1b, 0x2e, 0x72, 0x65,
	0x73, 0x70, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61,
	0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0f, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x13, 0x2e,
	0x72, 0x65, 0x71, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x46, 0x69,
	0x6c, 0x65, 0x1a, 0x14, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x17, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0x00, 0x12, 0x35, 0x0a, 0x0c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x10, 0x2e, 0x72, 0x65, 0x71, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0a, 0x46, 0x61, 0x73,
	0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x2e, 0x72, 0x65, 0x71, 0x46, 0x61, 0x73,
	0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x0f, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x46, 0x61,
	0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x00, 0x42, 0x07, 0x5a, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_upload_proto_rawDescOnce sync.Once
	file_upload_proto_rawDescData = file_upload_proto_rawDesc
)

func file_upload_proto_rawDescGZIP() []byte {
	file_upload_proto_rawDescOnce.Do(func() {
		file_upload_proto_rawDescData = protoimpl.X.CompressGZIP(file_upload_proto_rawDescData)
	})
	return file_upload_proto_rawDescData
}

var file_upload_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_upload_proto_goTypes = []interface{}{
	(*ReqUploadEntry)(nil),              // 0: reqUploadEntry
	(*RespUploadEntry)(nil),             // 1: respUploadEntry
	(*ReqUpdateFileMeta)(nil),           // 2: reqUpdateFileMeta
	(*RespUpdateFileMeta)(nil),          // 3: respUpdateFileMeta
	(*ReqUploadFile)(nil),               // 4: reqUploadFile
	(*RespUploadFile)(nil),              // 5: respUploadFile
	(*ReqInitialMultipartUpload)(nil),   // 6: reqInitialMultipartUpload
	(*RespInitialMultipartUpload)(nil),  // 7: respInitialMultipartUpload
	(*ReqUploadChunkFile)(nil),          // 8: reqUploadChunkFile
	(*RespUploadChunkFile)(nil),         // 9: respUploadChunkFile
	(*ReqCompleteMultipartUpload)(nil),  // 10: reqCompleteMultipartUpload
	(*RespCompleteMultipartUpload)(nil), // 11: respCompleteMultipartUpload
	(*ReqCancelUpload)(nil),             // 12: reqCancelUpload
	(*RespCancelUpload)(nil),            // 13: respCancelUpload
	(*ReqFastUpload)(nil),               // 14: reqFastUpload
	(*RespFastUpload)(nil),              // 15: respFastUpload
}
var file_upload_proto_depIdxs = []int32{
	0,  // 0: UploadService.UploadEntry:input_type -> reqUploadEntry
	2,  // 1: UploadService.UpdateFileMeta:input_type -> reqUpdateFileMeta
	4,  // 2: UploadService.UploadFile:input_type -> reqUploadFile
	6,  // 3: UploadService.InitialMultipartUpload:input_type -> reqInitialMultipartUpload
	8,  // 4: UploadService.UploadChunkFile:input_type -> reqUploadChunkFile
	10, // 5: UploadService.CompleteMultipartUpload:input_type -> reqCompleteMultipartUpload
	12, // 6: UploadService.CancelUpload:input_type -> reqCancelUpload
	14, // 7: UploadService.FastUpload:input_type -> reqFastUpload
	1,  // 8: UploadService.UploadEntry:output_type -> respUploadEntry
	3,  // 9: UploadService.UpdateFileMeta:output_type -> respUpdateFileMeta
	5,  // 10: UploadService.UploadFile:output_type -> respUploadFile
	7,  // 11: UploadService.InitialMultipartUpload:output_type -> respInitialMultipartUpload
	9,  // 12: UploadService.UploadChunkFile:output_type -> respUploadChunkFile
	11, // 13: UploadService.CompleteMultipartUpload:output_type -> respCompleteMultipartUpload
	13, // 14: UploadService.CancelUpload:output_type -> respCancelUpload
	15, // 15: UploadService.FastUpload:output_type -> respFastUpload
	8,  // [8:16] is the sub-list for method output_type
	0,  // [0:8] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_upload_proto_init() }
func file_upload_proto_init() {
	if File_upload_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_upload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUploadEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespUploadEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateFileMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespUpdateFileMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUploadFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespUploadFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqInitialMultipartUpload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespInitialMultipartUpload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUploadChunkFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespUploadChunkFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCompleteMultipartUpload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCompleteMultipartUpload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCancelUpload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCancelUpload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFastUpload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespFastUpload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_upload_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_upload_proto_goTypes,
		DependencyIndexes: file_upload_proto_depIdxs,
		MessageInfos:      file_upload_proto_msgTypes,
	}.Build()
	File_upload_proto = out.File
	file_upload_proto_rawDesc = nil
	file_upload_proto_goTypes = nil
	file_upload_proto_depIdxs = nil
}
